// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineStore.DAL.Context;

#nullable disable

namespace OnlineStore.DAL.Migrations
{
    [DbContext(typeof(OnlineStoreContext))]
    partial class OnlineStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineStore.DAL.Entities.BearerTokenSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EnvironmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<byte>("LifeTime")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentTypeId");

                    b.ToTable("BearerTokenSettings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EnvironmentTypeId = 1L,
                            LifeTime = (byte)30
                        },
                        new
                        {
                            Id = 2L,
                            EnvironmentTypeId = 2L,
                            LifeTime = (byte)30
                        },
                        new
                        {
                            Id = 3L,
                            EnvironmentTypeId = 3L,
                            LifeTime = (byte)1
                        },
                        new
                        {
                            Id = 4L,
                            EnvironmentTypeId = 4L,
                            LifeTime = (byte)7
                        });
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.EnvironmentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnvironmentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "staging"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "development"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "testing"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "production"
                        });
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeliveryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductsId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuantityProducts")
                        .HasColumnType("bigint");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Products", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Test product",
                            Price = 123L,
                            ProductName = "Wood",
                            Quantity = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Test product",
                            Price = 123L,
                            ProductName = "Stone",
                            Quantity = 123L
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Test product",
                            Price = 123L,
                            ProductName = "Wind",
                            Quantity = 123L
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Test product",
                            Price = 123L,
                            ProductName = "Watter",
                            Quantity = 123L
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Test product",
                            Price = 123L,
                            ProductName = "Steel",
                            Quantity = 123L
                        },
                        new
                        {
                            Id = 6L,
                            Description = "Test product",
                            Price = 123L,
                            ProductName = "Сoal",
                            Quantity = 123L
                        },
                        new
                        {
                            Id = 7L,
                            Description = "Test product",
                            Price = 123L,
                            ProductName = "Paper",
                            Quantity = 123L
                        });
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "staff"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "customer"
                        });
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.BearerTokenSetting", b =>
                {
                    b.HasOne("OnlineStore.DAL.Entities.EnvironmentType", "EnvironmentType")
                        .WithMany("BearerTokenSettings")
                        .HasForeignKey("EnvironmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnvironmentType");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Customer", b =>
                {
                    b.HasOne("OnlineStore.DAL.Entities.Role", "Role")
                        .WithMany("Customers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Order", b =>
                {
                    b.HasOne("OnlineStore.DAL.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStore.DAL.Entities.Products", "Products")
                        .WithMany("Orders")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.EnvironmentType", b =>
                {
                    b.Navigation("BearerTokenSettings");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Products", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineStore.DAL.Entities.Role", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
